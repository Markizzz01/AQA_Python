# Задача 1 (Арифметические операции)
# Напиши код, который вычисляет сумму чисел 8 и 3, а затем выводит результат.
from tkinter.font import names

result = 8 + 3
print(result) #Вывод 11
# Без переменной
print (8 + 3) #Вывод 11

# Задача 2 (Преобразование типов данных)
# Преобразуй число 25 в строку и выведи его тип с помощью type()
value = 25
value_str = str(value)
print (type(value_str)) #Вывод <class 'str'>

# Задача 3 (Операции сравнения)
# Напиши код, который сравнивает числа 10 и 7 с помощью оператора >= и выводит результат сравнения.
print (10 >= 7) # Вывод True
print (10 <= 7) # Вывод False

# Задача 4 (Именование переменных)
# Объяви переменную, которая хранит количество студентов в группе, соблюдая правила именования в Python. Затем выведи её значение.
total_student = 25
print(total_student) # Вывод 25

# Задача 5 (Переопределение переменной)
# Объяви переменную price = 100, затем переопредели её значение на 90 и выведи оба значения последовательно.
price = 100
print(price) # Вывод 100

price = 90
print(price) # Вывод 90

# Задача 6 (Объявление переменных)
# Объяви переменную fruit и присвой ей значение "яблоко". Затем выведи эту переменную.

fruit = "яблоко"
print(fruit) # Вывод яблоко

# Задача 7 (Арифметические операции)
# Вычисли разницу между числами 15 и 6 и выведи результат.

print(15 - 6) # Вывод 9

# Задача 8 (Типы данных)
# Определи тип данных значения 7.5 и выведи его через type().
value = 7.5
print (type(value)) # Вывод <class 'float'>

# Задача 9 (Операции сравнения)
# Сравни числа 20 и 20 с помощью оператора == и выведи результат.
print (20 == 20) # Вывод True
print (20 != 20) # Вывод False
print (20 >= 20) # Вывод True

# Задача 10 (Переопределение переменной)
# Объяви переменную count = 5
# Переопредели её значение на 10
# Выведи оба значения в одном print() через запятую
count = 5
print(count, end=", ")
count = 10
print(count) # Вывод 5, 10

# Задача 11 (Арифметические операции)
# Вычисли квадрат числа 8 и выведи результат.
value = 8
square = value ** 2
print(square) # Вывод 64

# Задача 12 (Типы данных)
# Определи тип данных значения "3.14" (строка) и выведи его через type().
value =  3.14
print(type(value)) # Вывод <class 'float'>

# Задача 13 (Операции сравнения)
# Сравни строки "Python" и "python" с помощью == и выведи результат.
print("Python" == "python") # Вывод False
print("python" == "python") # Вывод True
print("python" != "Python") # Вывод True

# Задача 14 (Преобразование типов)
# Преобразуй строку "123" в целое число и выведи его тип через type().
value = "123"
value_int = int(value)
print(type(value_int)) # Вывод <class 'int'>

# Задача 15 (Арифметические операции)
# Вычисли остаток от деления 27 на 4 и выведи результат.
print (27 % 4) # Вывод 3

# Задача 16 (Переопределение переменной)
# Создай переменную temperature = 15
# Переопредели её значение на temperature + 5
# Выведи новое значение
temperatura = 15
temperatura = temperatura + 5
print (temperatura) # Вывод 20

# Задача 17 (Сравнение строк)
# Проверь, содержится ли подстрока "fox" в строке "The quick brown fox jumps".
text = "The quick brown fox jumps"
print("fox" in text) # Вывод True
print("foc" in text) # Вывод False

# Задача 18 (Преобразование типов)
# Преобразуй список ["1", "2", "3"] в список чисел [1, 2, 3] и выведи его.
my_list = ["1", "2", "3"]
new_list = list(map(int, ["1", "2", "3"]))
print(new_list) # Вывод [1, 2, 3]

# Задача 19 (Логические операции)
# Даны две переменные:
a = True
b = False
# Выведи результат операций:
# a and b
# a or b
# not a

print(a and b) # Вывод False
print(a or b)  # Вывод True
print(not a)   # Вывод False

# Задача 20(Работа со списками) fruits = ["apple", "banana", "cherry"]
# Добавь в конец списка элемент "orange".
# Выведи обновлённый список.

fruits = ["apple", "banana", "cherry"]
fruits.append("orange")
print(fruits) # Вывод ['apple', 'banana', 'cherry', 'orange']

# Задача 21 (Условные выражения)
# Напиши код, который проверяет, является ли число 10 чётным, и выводит True или False.
print(10 % 2 == 0) # Вывод True
print(11 % 2 == 0) # Вывод False


# Задача 22 (Доступ к символам)
# Дана строка:
word = "Кодинг"
# Выведи на экран третий символ этой строки.
third_char = word[2]
print(third_char) # Вывод д

# Задача 23 (Срезы)
# Дана строка
text = "Автоматизация"
# Выведи на экран срез с 3-го по 7-й символ включительно
substring = text[3:8]
print(substring)

# Задача 24 (Длина строки)
# Дана строка:
message = "Hello, Python!"
# Напиши код, который выводит длину этой строки.
length = len(message)
print(length) # Вывод 14

# Задача 25 (конкатенация):
part1 = "Авто"
part2 = "матизация"
# Объедини их и выведи результат
result = part1 + part2
print(result) # Автоматизация

# Задача 26 (F-строки)
# Даны переменные:
name = "Анна"
age = 25
# Создай строку info с помощью f-строки, чтобы она содержала:
# "Меня зовут Анна, мне 25 лет."
# Выведи info на экран.
info = f"Меня зовут {name}, мне {age} лет."
print(info) # Вывод "Меня зовут Анна, мне 25 лет."

# Задача 27 (Работа со списками)
# Дан список:
fruits = ["apple", "banana", "cherry"]
# Добавь в конец списка элемент "orange" и выведи обновлённый список.
fruits.append("orange")
print(fruits) # Вывод ['apple', 'banana', 'cherry', 'orange']

# Задача 28 (Условные выражения)
# Проверь, является ли число 15 чётным, и выведи True или False.
print(15 % 2 == 0) # Вывод False
print(15 % 2 == 1) # Вывод True

# Задача 29 (Списки и срезы), дан список:
numbers = [10, 20, 30, 40, 50]
# Выведи элементы с 1-го по 3-й (включительно) используя срезы.
new_numbers = numbers[1:4]
print(new_numbers) #  Вывод [20, 30, 40]

# Задача 30 (Изменение списка), дан список:
colors = ["red", "green", "blue"]
# Замени второй элемент ("green") на "yellow" и выведи обновлённый список.
colors[1] ="yellow"
print (colors) # Вывод ['red', 'yellow', 'blue']

# Задача 31
# Создай строку с именем city и присвой ей значение "Москва". Выведи на экран второй символ этой строки.
city = "Москва"
new_city = city[1]
print(new_city) # Вывод о

# Задача 32
# Создай два списка - fruits с элементами "яблоко", "груша" и vegetables с элементами "морковь", "огурец"
# Объедини их в один список под названием products и выведи его.
fruits = ["яблоко","груша"]
vegatables = ["морковь", "огурец"]
product = fruits + vegatables
print(product) # Вывод ['яблоко', 'груша', 'морковь', 'огурец']

# Задача 33
# Создай строку text со значением "Python — это просто!".
# Выведи срез этой строки от 0 до 6 (не включая 6).
text = "Python — это просто!"
new_text = text[:6]
print(new_text) # Вывод Python

# Задача 34
# Создай список numbers с элементами 1, 2, 3.
# Добавь в него элемент 4 с помощью метода списка и выведи обновленный список
numbers = [1, 2, 3,]
numbers.append(4)
print(numbers) # Вывод [1, 2, 3, 4]

# Задача 35
# Создай переменную name со значением "Алексей".
# С помощью f-строки выведи фразу: Привет, Алексей!
name = "Алексей"
info = f"Привет, {name}!"
print(info) # Вывод Привет, Алексей!

# Задача 36
# Создай строку word со значением "Программирование" и выведи длину этой строки.
word = "Программирование"
length = len(word)
print(length) # Вывод 16

# Задача 37
# Создай список colors с элементами "красный", "зелёный", "синий".
# Замени второй элемент списка на "жёлтый" и выведи обновлённый список.
colors = ["красный", "зеленый", "синий"]
colors[1] = "желтый"
print(colors) # Вывод ['красный', 'желтый', 'синий']

# Задача 38
# Создай переменную age со значением 18.
# Используя условный оператор if, выведи строку "Совершеннолетний", если возраст больше или равен 18.
age = 18
if age >= 18:
    print("Совершеннолетний") # Вывод Совершеннолетний

# Задача 39
# Создай строку greeting со значением "доброе утро". Преобразуй её в верхний регистр методом строки и выведи результат.
greeting = "доброе утро"
result = greeting.upper()
print(result) # Вывод ДОБРОЕ УТРО

# Задача 40
# Создай список nums с элементами 10, 20, 30, 40. Удалите из него элемент 30 с помощью метода списка и выведи результат.
nums = [10, 20, 30, 40]
nums.remove(30)
print(nums) # Вывод [10, 20, 40]

# Задача 41
# Создай переменную score со значением 75.
# Используй условный оператор if-elif-else и выведи:
# 	•	"Отлично", если score больше или равен 90
# 	•	"Хорошо", если score больше или равен 60, но меньше 90
# 	•	"Попробуй ещё", если меньше 60
score = 75
if score >= 90:
    print("Отлично")
elif score >= 60:
    print("Хорошо")
else:
    print("Попробуй ещё") # Вывод Хорошо

# Задача 42
# Создай переменную temperature со значением -5.
# С помощью if-elif-else выведи:
# 	•	"Тепло", если температура выше 20
# 	•	"Прохладно", если от 0 до 20 включительно
# 	•	"Холодно", если меньше 0
temperatura = -5
if temperatura > 20:
    print("Тепло")
elif temperatura >= 0 and temperatura <= 20:
    print("Прохладно")
else:
    print("Холодно") # Вывод Холодно

# Задача 43
# Создай переменную speed со значением 120.
# С помощью if-elif-else выведи:
# 	•	"Медленно", если скорость меньше 40
# 	•	"Нормально", если от 40 до 100 включительно
# 	•	"Быстро", если больше 100
speed = 120
if speed < 40:
    print("Медленно")
elif speed <= 100:
    print("Нормально")
else:
    print("Быстро") # Вывод Быстро

# Задача 44
# Создай переменную balance со значением 0.
# С помощью if-elif-else выведи:
# 	•	"Положительный баланс", если больше 0
# 	•	"Ноль", если равен 0
# 	•	"Отрицательный баланс", если меньше 0
balanse = 0
if balanse >0:
    print("Положительный баланс")
elif balanse == 0:
    print("Ноль")
else:
    print("Отрицательный баланс") # Вывод Ноль

# Задача 45
# Создай переменную x со значением 5.
# С помощью тернарного оператора присвой переменной result строку "Чётное", если x делится на 2 без остатка, иначе "Нечётное".
# Выведи result.
x = 5
result = "Четное" if x % 2 == 0 else "Нечетное"
print(result) # Нечетное

# Задача 46
# Создай переменную number со значением 0.
# С помощью тернарного оператора присвой переменной msg:
# 	•	"Положительное", если число больше 0
# 	•	"Отрицательное", если меньше 0
# 	•	"Ноль", если равно 0
number = 0
msg = "Положительное" if number > 0 else "Отрицательное" if  number < 0 else "Ноль"
print(msg) # Вывод Ноль

# Задача 47
# Создай переменную grade со значением 4.
# С помощью тернарного оператора присвой переменной mark:
# 	•	"Отлично", если grade равно 5
# 	•	"Хорошо", если grade равно 4
# 	•	"Удовлетворительно" во всех остальных случаях
grade = 4
mark = "Отлично" if grade == 5 else "Хорошо" if grade == 4 else "Удовлетворительно"
print(mark) # Вывод Хорошо

# Задача 48
# Создай переменную login_attempts со значением 0.
# С помощью тернарного оператора присвой переменной status:
# 	•	"Заблокирован", если попыток больше 3
# 	•	"Предупреждение", если попыток от 1 до 3 включительно
# 	•	"Окей", если попыток 0
login_attempts = 0
status = "Заблокирован" if login_attempts > 3 else "Окей" if login_attempts == 0 else "Предупреждение"
print(status) # Вывод Окей

# Задача 49
#Создай переменную temperature со значением 15.
# С помощью if-elif-else выведи:
#	•	"Жарко", если температура выше 25
#	•	"Тепло", если температура от 15 до 25 включительно
#	•	"Холодно", если ниже 15
temperatura = 15
if temperatura > 25:
    print("Жарко")
elif temperatura >= 15 and temperatura <= 25:
    print("Тепло")
else:
    print("Холодно") # Вывод тепло

# Задача 50
# Создай переменную age и задай ей любое число.
# С помощью условного оператора if выведи сообщение "Совершеннолетний", если значение переменной age больше или равно 18.
age = 25
if age >= 18:
    print("Совершеннолетний") # Вывод Совершеннолетний

# Задача 51
# Создай переменную number и задай ей любое число.
# С помощью условного оператора if-else выведи "Чётное", если число делится на 2 без остатка, и "Нечётное" — если нет.
number = 496
if number % 2 == 0:
    print("Четное")
else:
    print("Нечетное") # Вывод Четное

# Задача 52
# Создай переменную temp и присвой ей любое число.
# Если temp меньше 0, выведи "Холодно"
# Если temp от 0 до 20 включительно, выведи "Прохладно"
# Иначе выведи "Тепло"
temp = 30
if temp < 0:
    print("Холодно")
elif temp >= 0 and temp <= 20:
    print("Прохладно")
else:
    print("Тепло")

# Задача 53
# Создай две переменные: a и b, присвой им любые числа.
# С помощью операции сравнения > выведи True, если a больше b, иначе False.
a = 5
b = 8
print(a > b) # Вывод False

# Задача 54
# Создай переменную score и присвой ей число от 0 до 100.
# С помощью тернарного оператора выведи "Отлично", если score больше или равно 90, иначе "Могло быть и лучше".
score = 80
result = "Отлично" if score >= 90 else "Могло быть и лучше"
print(result) # Вывод Могло быть и лучше

# Задача 55
# Создай переменную is_raining и задай ей значение True или False.
# С помощью логического оператора not выведи "Можно идти гулять", только если не идёт дождь.
is_raining = True
if not is_raining:
    print("Можно идти гулять")
else:
    print("только если не идет дождь") # Вывод только если не идет дождь

# Задача 56
# Создай словарь person с ключами "name" и "age" и значениями "Алексей" и 25.
# Выведи этот словарь на экран.
person = {
    "name" : "Алексей",
    "age" : 25
}
print(person) # Вывод {'name': 'Алексей', 'age': 25}

# Задача 57
# Создай пустой словарь book.
# Затем добавь в него ключ "title" со значением "Python 101".
# Выведи обновлённый словарь.
book = {}
book["title"] = "Python 101"
print(book) # Вывод {'title': 'Python 101'}

# Задача 58
# Создай словарь user с ключами "login" и "password".
# Значения — "admin" и "1234".
# Выведи значение по ключу "login".
user = {
    "login" : "admin",
    "password" : "1234"
}
login = user["login"]
print(login) # Вывод admin

# Задача 59
# Удали из словаря user ключ "password".
# Выведи обновлённый словарь.
del user["password"]
print(user) # Вывод {'login': 'admin'}

# Задача 60
# Создай словарь product с ключами "name" и "price", значениями "яблоко" и 50.
# Обнови значение ключа "price" на 60.
# Выведи словарь.
product = {
    "name" : "яблоко",
    "price" : 50
}
product["price"] = 60
print(product) # Вывод {'name': 'яблоко', 'price': 60}

# Задача 61
# Создай словарь car с ключами "brand", "model", "year".
# Значения: "Toyota", "Corolla", 2020.
# Выведи все ключи словаря.
car = {
    "brand" : "Toyota",
    "model" : "Corolla",
    "year"  :  2020
}
print(car.keys()) # Вывод dict_keys(['brand', 'model', 'year'])

# Задача 62
# Создай словарь student с ключами "name", "grade", "age".
# Значения: "Иван", 5, 17.
# Выведи все значения словаря student.
student= {
    "name" : "Иван",
    "grade" : 5,
    "age" : 17
}
print(student.values()) # Вывод dict_values(['Иван', 5, 17])

# Задача 63
# Создай словарь city с ключами "name", "population".
# Значения: "Москва", 12_500_000.
# Проверь, есть ли в словаре ключ "country".
# Выведи результат проверки (True или False).
city = {
    "name" : "Москва",
    "population" : 12_500_000
}
print("country" in city) # Вывод False

# Задача 64
# Создай словарь employee с ключами "name", "position", "salary".
# Значения: "Анна", "менеджер", 50000.
# Проверь, есть ли в словаре значение "менеджер".
# Выведи результат проверки (True или False).
employee = {
    "name" : "Анна",
    "position" : "менеджер",
    "salary" : 50000
}
print("менеджер" in employee.values()) # Вывод True

# Задача 65
# Создай словарь phone с ключами "brand", "model", "price".
# Значения: "Samsung", "Galaxy S21", 70000.
# Проверь, есть ли в словаре ключ "model".
# Проверь, есть ли в словаре значение 60000.
# Выведи результаты проверок (True или False) в две строки.
phone = {
    "brand" : "Samsung",
    "model" : "Galaxy S21",
    "price" : 7000
}
print("model" in phone.keys()) # Вывод True
print(60000 in phone.values()) # Вывод False

# Задача 66
# Создай словарь inventory с ключами "apples", "oranges", "bananas".
# Значения: 10, 20, 15.
# Удали ключ "oranges" из словаря.
# Выведи обновлённый словарь.
inventory ={
    "apples" : 10,
    "oranges" : 20,
    "bananas" : 15
}
del inventory["oranges"]
print(inventory) # Вывод {'apples': 10, 'bananas': 15}

# Задача 67
# Создай словарь animal с ключами "type", "name", "age".
# Значения: "кошка", "Муся", 3.
# Получи все пары ключ-значение (items) и выведи их.
animal = {
    "type" : "кошка",
    "name" :  "Муся",
    "age" : 3
}
print(animal.items()) # Вывод dict_items([('type', 'кошка'), ('name', 'Муся'), ('age', 3)])

# Задача 68
# Создай словарь movie с ключами "title", "year", "genre".
# Значения: "Inception", 2010, "sci-fi".
# Обнови жанр на "fantasy".
# Выведи обновлённый словарь.
movie = {
    "title" : "Inception",
    "year" : 2010,
    "genre" : "sci-fi"
}
movie["genre"] = "fantasy"
print(movie) # Вывод {'title': 'Inception', 'year': 2010, 'genre': 'fantasy'}

# Задача 69
# Создай словарь user с ключами "name" и "email", значениями "Олег" и "oleg@example.com".
# Проверь, есть ли значение "Олег" в этом словаре.
# Выведи результат проверки.
user = {
    "name" : "Олег",
    "email" : "oleg@example.com"
}
print("Олег" in user.values()) # Вывод True

# Задача 70
# Создай словарь profile с ключами "username", "email", "active".
# Значения: "markizzz", "markizzz@example.com", True.
# Если ключ "active" есть в словаре — удали его.
# Выведи обновлённый словарь.
profile = {
    "username" : "markizzz",
    "email" : "markizzz@example.com",
    "active" : True
}
if "active" in profile:
    del profile["active"]
    print(profile) # Вывод {'username': 'markizzz', 'email': 'markizzz@example.com'}

# Задача 71
# Создай список fruits с элементами "яблоко", "банан", "киви", "апельсин".
# С помощью цикла for выведи каждый элемент списка на новой строке.
fruits = ["яблоко", "банан", "киви", "апельсин"]
for fruit in fruits:
    print(fruit) # Вывод :
# яблоко
# банан
# киви
# апельсин

# Задача 72
# Создай строку message со значением "Привет, мир!".
# С помощью цикла for пройдись по каждому символу строки и выведи его на новой строке.
message = "Привет, мир"
for letter in message:
    print(letter) # Вывод каждый символ выведен на новой строке

# Задача 73
# Создай список чисел numbers с элементами 3, 7, 2, 9.
# С помощью цикла for выведи каждый элемент списка, умноженный на 2.
numbers = [3, 7, 3, 9]
for number in numbers:
    print(number * 2) # Вывод 6, 14, 6, 18

# Задача 74
# Создай строку text со значением "Python".
# С помощью цикла for выведи каждый символ строки, добавив к нему в выводе восклицательный знак.
# Например: P! y! t! ...
text = "Python"
for text_2 in text:
    print(text_2 + "!") # Вывод P! y! и т

# Задача 75
# Создай список чисел от 1 до 5 с помощью функции range.
# С помощью цикла for выведи каждый элемент списка.
for numbers in range(1, 6):
    print(numbers) # Вывод 1 2 3 4 5

# Задача 76
# Создай строку word со значением "hello".
# С помощью цикла while выведи каждый символ строки на новой строке.
word = "hello"
i = 0
while i < len(word):
    print(word[i])
    i += 1

# Задача 77
# Создай список colors с элементами "красный", "зелёный", "синий".
# С помощью цикла for выведи каждый цвет, но прекрати вывод при встрече цвета "зелёный" (используй break).
colors = ["красный", "зелёный", "синий"]
for color in colors:
    if color == ("зелёный"):
        break
    print(color) # Вывод красный

# Задача 78
# Создай число count со значением 0.
# Используй цикл while, чтобы увеличить count на 1 и вывести его значение, пока count меньше 5.
count = 0
while count < 5:
    print(count)
    count += 1 # Вывод 0 1 2 3 4

# Задача 79
# Создай список numbers с элементами 10, 20, 30, 40, 50.
# С помощью цикла for выведи только те числа, которые больше 25.
numbers = [10, 20, 30, 40, 50]
for number in numbers:
    if number > 25:
     print(number) # Вывод 30 40 50

# Задача 80
# Создай список имен names с элементами "Анна", "Иван", "Мария", "Пётр".
# С помощью цикла for выведи имена, пропуская имя "Мария" (используй continue).
names = ["Анна", "Иван", "Мария", "Пётр"]
for name in names:
    if name == "Мария":
        continue
    print(name) # Вывод Анна Иван Пётр

# Задача 81
# Создай число n со значением 10.
# Используй цикл while, чтобы выводить числа от n до 1 в обратном порядке (включительно)
n = 10
while n >= 1:
    print(n)
    n -= 1 # Вывод 10 9 8 и т.д
# Задача 82
# Создай строку word со значением "code".
# С помощью цикла for выведи каждый символ строки дважды (например: cс, oо, dд, eе).
word = "code"
for wordd in word:
    print(wordd * 2) # Вывод cc oo и т.д

# Задача 83
# Создай список food с элементами "хлеб", "сыр", "молоко", "вода".
# С помощью цикла for выведи элементы списка, но останови цикл при встрече элемента "молоко" (используй break).
food = ["хлеб", "сыр", "молоко", "вода"]
for foodd in food:
    if foodd == ("молоко"):
       break
    print(foodd) # Вывод хлеб сыр

# Задача 84
# Создай список numbers с элементами 1, 2, 3, 4, 5.
# С помощью цикла for выведи квадраты только чётных чисел из списка.
numbers = [ 1, 2, 3, 4, 5]
for number in numbers:
    if number % 2 == 0:
      print(number ** 2) # Вывод 4 16

# Задача 85
# Создай число x со значением 0.
# Используй цикл while, чтобы увеличить x на 3 и вывести его, пока x меньше 15.

x = 0
while x < 15:
    print(x)
    x += 3   # Вывод 0 3 6 9 12

# Задача 86
# Создай число x со значением 0.
# Используй цикл while, чтобы увеличить x на 3 и вывести его, пока x меньше 15.

x = 0
while x < 15:
    print(x)
    x += 3 # Вывод 0 3 6 9 12

# Задача 87
# Создай список fruits с элементами "яблоко", "банан", "киви", "апельсин".
# Используй цикл for, чтобы вывести каждый фрукт на новой строке.
fruits = ["яблоко", "банан", "киви", "апельсин"]
for fruit in fruits:
    print(fruit) # Вывод яблоко банана киви апельсин

# Задача 88
# Создай строку message со значением "Привет".
# Используй цикл for, чтобы вывести каждый символ строки на новой строке.
message = "Привет"
for message_2 in message:
    print(message_2) # Вывод каждый символ на новой строке

# Задача 89
# Создай список numbers с элементами 1, 2, 3, 4, 5.
# Используй цикл for, чтобы вывести удвоенные значения каждого числа.
numbers = [1, 2, 3, 4, 5]
for number in numbers:
    print(number * 2) # Вывод 2 4 6 8 10

# Задача 90
# Используй функцию range, чтобы с помощью цикла for вывести числа от 1 до 5 включительно.
for number in range(1, 6):
    print(number) # Вывод 1 2 3 4 5

# Задача 91
# Создай число count со значением 0.
# Используй цикл while, чтобы увеличить count на 2 и вывести его, пока count меньше 10.
count = 0
while count < 10:
    print(count)
    count += 2 # Выввод 0 2 4 6 8

# Задача 92
# Создай список colors с элементами "красный", "зелёный", "синий".
# Используй цикл for и оператор break, чтобы вывести элементы списка до "зелёный" включительно, затем остановить цикл.
colors = ["красный", "зелёный", "синий"]
for color in colors:
    print(color)
    if color == "зелёный":
       break
                  # Вывод красный зелёный
# Задача 93
# Создай число number со значением 0.
# Используй цикл while, чтобы увеличить number на 2 и вывести его, пока number меньше 10.
number = 0
while number < 10:
    print(number)
    number += 2  #Вывод 0 2 4 6 8

# Задача 94
# Создай строку word со значением "python".
# Используй цикл for, чтобы пройтись по каждому символу строки.
# Выводи каждый символ дважды на новой строке.
word = "python"
for word_2 in word:
    print(word_2 * 2) #Вывод pp yy и т.д


# Задача 95
# Создай файл с именем "example.txt" и запиши в него строку "Это пример записи в файл".
# Используй для этого контекстный менеджер with.
with open("example.txt", "w") as file:
    file.write("Это пример записи в файл")

# Задача 96
# Создай текстовый файл с именем "data.txt", если его ещё нет.
# Открой файл в режиме добавления.
# Добавь в него строку "Новая строка данных\n" с помощью метода write().
with open("data.txt", "a") as file:
    file.write("Новая строка данных\n")

# Задача 97
# Открой файл "example.txt" для чтения.
# Считай содержимое файла и выведи его на экран.
# Используй контекстный менеджер with.
with open("example.txt", "r", encoding = "utf-8") as file:
    content = file.read()
    print(content)

# Задача 98
# Открой файл "data.txt" для чтения.
# Считай все строки файла и выведи каждую строку отдельно.
# Используй цикл for для вывода строк.
with open("data.txt", "r", encoding = "utf-8") as file:
    for line in file:
        print(line.strip()) # без переноса строки

# Задача 99
# Создай новый файл "log.txt".
# Запиши в него три строки:
# "Первая запись"
# "Вторая запись"
# "Третья запись"
# Используй контекстный менеджер with и режим записи.
with open("log.txt", "w") as file:
    file.write("Первая запись\n")
    file.write("Вторая запись\n")
    file.write("Третья запись\n")

# Задача 100
# Создай файл info.txt и запиши в него строку "Информация о системе" в режиме записи.
# Затем открой файл в режиме чтения и выведи содержимое.
with open("info.txt", "w") as file:
    file.write("Информация о системе")
with open("info.txt", "r", encoding= "utf-8") as file:
    print(file.read()) # Вывод Информация о системе

# Задача 101
# Создай файл "notes.txt" и запиши в него строку "Первая заметка".
# Затем открой этот же файл в режиме 'a' и добавь строку "Вторая заметка".
# После этого прочитай файл и выведи его содержимое построчно.

with open("notes.txt", "w") as file:
    file.write("Первая строка\n")
with open("notes.txt", "a") as file:
    file.write("Вторая строка\n")
with open("notes.txt", "r", encoding= "utf-8") as file:
    for line in file:
        print(line.strip()) # Вывод Первая строка Вторая строка

# Задача 103
# Открой файл "report.txt" в режиме добавления ("a").
# Добавь в файл строку "Данные за понедельник".
# Используй контекстный менеджер with.
with open("report.txt", "a") as file:
    file.write("Данные за понедельник\n")
with open("report.txt", "r", encoding= "utf-8") as file:
    print(file.read())

# Задача 104
# Создай файл "log.txt" и запиши в него три строки:
# "Ошибка: файл не найден", "Ошибка: доступ запрещён", "Ошибка: неизвестная".
# Используй режим "w" и контекстный менеджер with.
with open("log.txt", "w") as file:
    file.write("Ошибка: файл не найден\nОшибка: доступ запрещён\nОшибка: неизвестная\n")
with open("log.txt", "r", encoding= "utf-8") as file:
        print(file.read()) # Вывод Ошибка: файл не найден Ошибка: доступ запрещён Ошибка: неизвестная

import os
os.remove("notes.txt")




